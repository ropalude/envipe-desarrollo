// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 25/03/2015 01:27:38 p. m. (- $Rev: 12980 $, 97275718).

[
  uuid(DDB0275F-091C-4B35-B8E7-0F66610009BC), 
  version(1.0), 
  helpstring("Interprete Library")
    
]
library Interprete
{

  importlib("stdole2.tlb");

  interface IMyExternal;


  [
    uuid(6EE63FF4-1A46-4606-8A02-00B1D2EB7591), 
    version(1.0), 
    dual, 
    oleautomation
  ]
  interface IMyExternal: IDispatch
  {
    [id(0x000000CB)]
    HRESULT _stdcall getQuesOrSub([in] BSTR tabla, [in] BSTR campo, [out, retval] VARIANT* result);
    [id(0x000000CC)]
    HRESULT _stdcall setQuesOrSub([in] BSTR tabla, [in] BSTR campo, [in] VARIANT valor);
    [id(0x000000CD)]
    HRESULT _stdcall getMultiple([in] BSTR tabla, [out, retval] VARIANT* result);
    [id(0x000000CE)]
    HRESULT _stdcall setMultiple([in] BSTR tabla, [in] BSTR json);
    [id(0x000000C9)]
    HRESULT _stdcall size([in] BSTR tabla, [out, retval] VARIANT* result);
    [id(0x000000CA)]
    HRESULT _stdcall remove([in] BSTR tabla, [in] BSTR index);
    [id(0x000000CF)]
    HRESULT _stdcall moveIndex([in] BSTR tabla, [in] BSTR index);
    [id(0x000000D0)]
    HRESULT _stdcall getIndex([in] BSTR tabla, [out, retval] VARIANT* index);
    [id(0x000000D1)]
    HRESULT _stdcall setField([in] BSTR tabla, [in] BSTR campo, [in] VARIANT valor);
    [id(0x000000D2)]
    HRESULT _stdcall alert([in] BSTR texto, [out, retval] VARIANT* res);
    [id(0x000000D3)]
    HRESULT _stdcall alertConfig([in] BSTR texto, [out, retval] VARIANT* res);
    [id(0x000000D4)]
    HRESULT _stdcall setSQL([in] BSTR cadena, [in] BSTR conexion);
    [id(0x000000D5)]
    HRESULT _stdcall getJSONFromQuery([in] BSTR cadena, [in] BSTR conexion, [in] BSTR nombre, [out, retval] VARIANT* result);
    [id(0x000000D6)]
    HRESULT _stdcall getDate([in] BSTR opcion, [out, retval] VARIANT* result);
    [id(0x000000D7)]
    HRESULT _stdcall printReport([in] BSTR reporte, [in] BSTR nombre_cuest, [in] BSTR conexion, [in] BSTR llaves);
    [id(0x000000D8)]
    HRESULT _stdcall getErroresCount([out, retval] VARIANT* result);
    [id(0x000000D9)]
    HRESULT _stdcall salirCuestionario(void);
    [id(0x000000DA)]
    HRESULT _stdcall getCaptura([in] BSTR nombre);
    [id(0x000000DB)]
    HRESULT _stdcall disable([in] BSTR name_, [in] BSTR type_);
    [id(0x000000DC)]
    HRESULT _stdcall newElement([in] BSTR tabla);
    [id(0x000000DD)]
    HRESULT _stdcall enable([in] BSTR name_, [in] BSTR type_);
    [id(0x000000DE)]
    HRESULT _stdcall getStateQuestion([in] BSTR name_);
    [id(0x000000DF)]
    HRESULT _stdcall goFirstPage(void);
    [id(0x000000E0)]
    HRESULT _stdcall goNextPage(void);
    [id(0x000000E1)]
    HRESULT _stdcall goLastPage(void);
    [id(0x000000E2)]
    HRESULT _stdcall goPriorPage(void);
    [id(0x000000E3)]
    BSTR _stdcall newGrupo([in] BSTR tabla);
    [id(0x000000E4)]
    HRESULT _stdcall goPage([in] BSTR page);
    [id(0x000000E5)]
    HRESULT _stdcall goPageIndex([in] BSTR page, [in] BSTR index);
    [id(0x000000E6)]
    HRESULT _stdcall saveEntity([in] BSTR entidad);
    [id(0x000000E7)]
    HRESULT _stdcall beep([in] BSTR wav);
    [id(0x000000E8)]
    HRESULT _stdcall hide([in] BSTR elemento);
    [id(0x000000E9)]
    HRESULT _stdcall show([in] BSTR elemento);
    [id(0x000000EA)]
    HRESULT _stdcall openDialog([in] BSTR grupo);
    [id(0x000000EB)]
    HRESULT _stdcall closeDialog([in] BSTR grupo);
    [id(0x000000EC)]
    HRESULT _stdcall recargaMenu(void);
  };

};